import React, { useState } from 'react';
import jsPDF from 'jspdf';
import { natalChartInterpretations, NatalChartInterpretationsType } from '../../../constants/natalChartInterpretations'
import { ReadingPayload, UserInfo, ContactInfo, ReadingResult } from '../../../types/natalChart';
import { fetchReading } from '../utilities/astrologicalCalculations';
import { useLoading } from '../../../contexts/LoadingContext';

interface FinalStepProps {
  payload: ReadingPayload;
  userInfo: UserInfo;
  contactInfo: ContactInfo;
  paymentStatus: boolean;
}

const FinalStep: React.FC<FinalStepProps> = ({ payload, userInfo, contactInfo, paymentStatus }) => {
  const { startLoading, stopLoading } = useLoading();
  const [result, setResult] = useState<ReadingResult | null>(null);
  const [interpretations, setInterpretations] = useState<NatalChartInterpretationsType | null>(null);

  const formatDate = (date: Date): string => {
    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
  };

  const formatTime = (date: Date): string => {
    return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;
  };

  const handleFormSubmit = async () => {
    startLoading();
    try {
      const readingResult = await fetchReading('ro', payload);
      setResult(readingResult);
      setInterpretations(natalChartInterpretations)
    } catch (error) {
      console.error('Error fetching reading:', error);
      setResult(null);
      setInterpretations(null);
    } finally {
      stopLoading();
    }
  };

  const handleDownloadPDF = () => {
    const doc = new jsPDF();
    
    // Set fonts and styling
    doc.setFont("helvetica", "bold");
    doc.setFontSize(20);
    doc.setTextColor(184, 134, 11); // Dark golden color for title
    
    // Title
    doc.text("Natal Chart Reading", 20, 20);
    
    // User Information
    doc.setFont("helvetica", "normal");
    doc.setFontSize(12);
    doc.setTextColor(0);
    
    let yPosition = 40;
    
    // Add user details
    doc.text(`Name: ${userInfo.name}`, 20, yPosition);
    yPosition += 10;
    doc.text(`Birth Date: ${formatDate(userInfo.birthDate)}`, 20, yPosition);
    yPosition += 10;
    doc.text(`Birth Time: ${formatTime(userInfo.birthHour)}`, 20, yPosition);
    yPosition += 10;
    doc.text(`Location: ${userInfo.location}`, 20, yPosition);
    yPosition += 20;

    // Add interpretations
    doc.setFont("helvetica", "bold");
    doc.text("Your Natal Chart Interpretation", 20, yPosition);
    yPosition += 10;
    
    doc.setFont("helvetica", "normal");
    // interpretations.forEach((interpretation: any, index: any) => {
    //   // Check if we need a new page
    //   if (yPosition > 270) {
    //     doc.addPage();
    //     yPosition = 20;
    //   }
      
    //   doc.text(interpretation, 20, yPosition);
    //   yPosition += 10;
    // });
    
    // Add footer
    doc.setFontSize(10);
    doc.setTextColor(128);
    doc.text("Generated by AstroLumina", 20, 290);
    
    doc.save(`natal-chart-${userInfo.name.toLowerCase().replace(/\s+/g, '-')}.pdf`);
  };

  const handleNatalChart = async () => {
    handleFormSubmit();
    handleDownloadPDF()
  }

  return (
    <div className="space-y-6 text-center">
      <div className="bg-amber-50 p-6 rounded-lg">
        <h2 className="text-2xl font-bold text-amber-900 mb-4">Your Natal Chart is Ready!</h2>
        
        <div className="space-y-2 text-left mb-6">
          <p className="text-amber-700"><span className="font-semibold">Name:</span> {userInfo.name}</p>
          <p className="text-amber-700"><span className="font-semibold">Birth Date:</span> {formatDate(userInfo.birthDate)}</p>
          <p className="text-amber-700"><span className="font-semibold">Birth Time:</span> {formatTime(userInfo.birthHour)}</p>
          <p className="text-amber-700"><span className="font-semibold">Location:</span> {userInfo.location}</p>
        </div>

        <div className="space-y-4">
          <p className="text-amber-600">
            Your personalized natal chart reading has been generated. Click below to download your detailed interpretation.
          </p>
          
          <button
            onClick={handleNatalChart}
            className="w-full bg-amber-500 text-white py-3 px-6 rounded-lg hover:bg-amber-600 transition-colors flex items-center justify-center gap-2"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
              <path fillRule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clipRule="evenodd" />
            </svg>
            Download PDF
          </button>
        </div>
      </div>

      <div className="bg-white p-6 rounded-lg shadow-lg">
        <h3 className="text-xl font-semibold text-gray-800 mb-4">What's Next?</h3>
        <p className="text-gray-600">
          Take your time to review your natal chart interpretation. If you have any questions or would like a more detailed consultation,
          feel free to contact us using the provided contact information in your PDF.
        </p>
      </div>
    </div>
  );
};

export default FinalStep;
